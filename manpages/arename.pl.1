.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "ARENAME 1"
.TH ARENAME 1 "2007-10-28" "perl v5.8.8" "User Contributed Perl Documentation"
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
arename.pl [\s-1OPTION\s0(s)] \s-1FILE\s0(s)...
.SH "OPTIONS AND ARGUMENTS"
.IX Header "OPTIONS AND ARGUMENTS"
.IP "\fB\-d\fR" 8
.IX Item "-d"
Go into dryrun mode.
.IP "\fB\-f\fR" 8
.IX Item "-f"
Overwrite files if needed.
.IP "\fB\-h\fR" 8
.IX Item "-h"
Display a short help text.
.IP "\fB\-V\fR" 8
.IX Item "-V"
Display version infomation.
.IP "\fB\-v\fR" 8
.IX Item "-v"
Enable verbose output.
.IP "\fB\-p\fR <prefix>" 8
.IX Item "-p <prefix>"
Define a prefix for destination files.
.IP "\fB\-T\fR <template>" 8
.IX Item "-T <template>"
Define a compilation template.
.IP "\fB\-t\fR <template>" 8
.IX Item "-t <template>"
Define a generic template.
.IP "\fI\s-1FILE\s0(s)...\fR" 8
.IX Item "FILE(s)..."
Input files, that are subject for renaming.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBarename.pl\fR is a tool that is able to rename audio files by looking at
a file's tagging information, from which it will assemble a consistent
destination file name. The format of that filename is configurable for the
user by the use of template strings.
.PP
\&\fBarename.pl\fR currently supports two widely used audio formats, namely
\&\s-1MPEG\s0 Layer3 and ogg vorbis. The format, that \fBarename.pl\fR will assume
for each input file is determined by the file's filename-extension
(\fI.mp3\fR vs. \fI.ogg\fR). The extension check is case\-insensitive.
.PP
By default, \fBarename.pl\fR will refuse to overwrite destination files,
if the file in question already exists. You can force overwriting by
supplying the \fB\-f\fR option.
.SH "FILES"
.IX Header "FILES"
\&\fBarename.pl\fR uses up to two configuration files. As for most programs,
the script will try to read a configuration file, that is located in the
user's \fIhome directory\fR. In addition to that, it will try to load \fIlocal\fR
configuration files, if it finds appropriately named files in the
\&\fIcurrent directory\fR.
.IP "\fB~/.arenamerc\fR" 8
.IX Item "~/.arenamerc"
per-user global configuration file.
.IP "\fB./.arename.local\fR" 8
.IX Item "./.arename.local"
per-directory local configuration file.
.Sh "File format"
.IX Subsection "File format"
The format of the aforementioned files is pretty simple.
It is parsed line by line. Empty lines, lines only containing whitespace
and lines, whose first non whitespace character is a hash character (\fI#\fR)
are ignored.
.PP
Each line consists of one or two parts. If there are two parts,
they are separated by whitespace. The first part of the line will be used
as the identifier of a setting (eg. \fIverbose\fR). The second part (read: the
rest of the line) is used as the value of the setting. (No quoting, or whatsoever
is required.)
.PP
If a line consists of only one part, that means the setting is switched on.
.Sh "Configuration file example"
.IX Subsection "Configuration file example"
.Vb 2
\&  # switch on verbosity
\&  verbose
.Ve
.PP
.Vb 2
\&  # the author is crazy! use a sane template by default. :\-)
\&  template &artist \- &album (&year) \- &tracknumber. &tracktitle
.Ve
.SH "SETTINGS"
.IX Header "SETTINGS"
The following settings are supported in all configuration files:
.IP "\fBcomp_template\fR" 8
.IX Item "comp_template"
Defines a template to use with files that provide a compilation tag
(for 'various artist' CDs, for example). This setting can still be
overwritten by the \fB\-T\fR command line option. (default value:
\&\fIva/&album/&tracknumber \- &artist \- &tracktitle\fR)
.IP "\fBdefault_year\fR" 8
.IX Item "default_year"
Defines a default year, for files, that lack this information.
(default value: \fIundefined\fR)
.IP "\fBprefix\fR" 8
.IX Item "prefix"
Defines a prefix for destination files. This setting can still be
overwritten by the \fB\-p\fR command line option. (default value: \fI.\fR)
.IP "\fBsepreplace\fR" 8
.IX Item "sepreplace"
Tagging information strings may contain slashes, which is a pretty bad
idea on most filesystems. Therefore, you can define a string, that replaces
slashes with the value of this setting. (default value: \fI_\fR)
.IP "\fBtemplate\fR" 8
.IX Item "template"
Defines a template to use with files that do not provide a compilation tag
(or where the compilation tag and the artist tag are exactly the same).
This setting can still be overwritten by the \fB\-T\fR command line option.
(default value: \fI&artist[1]/&artist/&album/&tracknumber \- &tracktitle\fR)
.IP "\fBtnpad\fR" 8
.IX Item "tnpad"
This defines the width, to which the tracknumber field is padded with zeros
on the left. (default value: \fI2\fR)
.IP "\fBverbose\fR" 8
.IX Item "verbose"
Switches on verbosity by default. (default value: \fIoff\fR)
.SH "TEMPLATE FORMAT"
.IX Header "TEMPLATE FORMAT"
\&\fBarename.pl\fR's templates are quite simple, yet powerful.
.PP
At simplest, a template is just a fixes character string. However, that would
not be exactly useful. So, the script is able to expand certain expressions
with information gathered from the file's tagging information.
.PP
The expressions can have two slightly different forms:
.IP "\fB&\fR\fIidentifier\fR" 8
.IX Item "&identifier"
The simple form.
.IP "\fB&\fR\fIidentifier\fR\fB[\fR\fIlength\fR\fB]\fR" 8
.IX Item "&identifier[length]"
The \*(L"complex\*(R" form. The \fIlength\fR argument in square brackets defines the
maximum length, to which the expression should be expanded.
.Sh "Available expression identifiers"
.IX Subsection "Available expression identifiers"
The data, that is expanded is derived from tagging information in
the audio files. For \fI.ogg\fR files, the tag checking \fBarename.pl\fR does
is case insensitive and the first matching tag will be used.
.IP "\fBalbum\fR" 8
.IX Item "album"
Guess.
.IP "\fBartist\fR" 8
.IX Item "artist"
Guess again.
.IP "\fBcompilation\fR" 8
.IX Item "compilation"
For \fI.ogg\fR this is filled with information found in the 'albumartist' tag.
For \fI.mp3\fR this is filled with information from the id3v2 \s-1TPE2\s0 frame.
If the mp3 file only provides a id3v1 tag, this is not supported.
.IP "\fBtracknumber\fR" 8
.IX Item "tracknumber"
The number of the position of the track on the disc. Obviously. However, this
can be in the form of '12' or '12/23'. In the second form, only the part left
of the slash is used. The tracknumber is a little special, as you can defined
to what width it should be padded with zeros on the left (see \fItnpad\fR setting
in \*(L"\s-1SETTINGS\s0\*(R" in \fIarename\fR\|(1)).
.IP "\fBtracktitle\fR" 8
.IX Item "tracktitle"
Well...
.IP "\fByear\fR" 8
.IX Item "year"
Year (id3v1), \s-1TYER\s0 (id3v2) or \s-1DATE\s0 tag (.ogg).
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIOgg::Vorbis::Header\fR\|(3) and \fIMP3::Tag\fR\|(3).
.SH "AUTHOR"
.IX Header "AUTHOR"
Frank Terbeck <ft@bewatermyfriend.org>,
.PP
Please report bugs.
.SH "LICENSE"
.IX Header "LICENSE"
.Vb 2
\& Copyright 2007
\& Frank Terbeck <ft@bewatermyfriend.org>, All rights reserved.
.Ve
.PP
.Vb 3
\& Redistribution and use in source and binary forms, with or without
\& modification, are permitted provided that the following conditions
\& are met:
.Ve
.PP
.Vb 7
\&   1. Redistributions of source code must retain the above
\&      copyright notice, this list of conditions and the following
\&      disclaimer.
\&   2. Redistributions in binary form must reproduce the above
\&      copyright notice, this list of conditions and the following
\&      disclaimer in the documentation and/or other materials
\&      provided with the distribution.
.Ve
.PP
.Vb 11
\&  THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
\&  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
\&  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
\&  DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS OF THE
\&  PROJECT BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
\&  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
\&  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
\&  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
\&  OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
\&  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
\&  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.Ve
